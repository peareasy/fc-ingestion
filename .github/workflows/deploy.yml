name: Deploy FC Ingestion

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: eu-west-1
  NODE_VERSION: "20"

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build

      - name: Run tests
        run: npm run test

  build-and-deploy:
    name: Build and Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions-${{ github.run_id }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to AWS
        run: npm run deploy
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          CDK_DEFAULT_REGION: ${{ env.AWS_REGION }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

      - name: Verify deployment
        run: |
          # Wait for deployment to stabilize
          sleep 30

          # Get ECS service name from CDK outputs
          SERVICE_NAME=$(aws cloudformation describe-stacks \
            --stack-name FcIngestionStack \
            --query 'Stacks[0].Outputs[?OutputKey==`ServiceName`].OutputValue' \
            --output text)

          # Check ECS service status
          echo "Checking ECS service: $SERVICE_NAME"
          
          # Wait for service to be stable
          aws ecs wait services-stable \
            --cluster fc-ingestion-cluster \
            --services "$SERVICE_NAME"

          # Get running tasks
          TASKS=$(aws ecs list-tasks \
            --cluster fc-ingestion-cluster \
            --service-name "$SERVICE_NAME" \
            --desired-status RUNNING \
            --query 'taskArns' \
            --output text)

          if [ -z "$TASKS" ]; then
            echo "❌ No running tasks found"
            exit 1
          fi

          echo "✅ Deployment verified successfully!"
          echo "ECS Service: $SERVICE_NAME"
          echo "Running tasks: $TASKS"
